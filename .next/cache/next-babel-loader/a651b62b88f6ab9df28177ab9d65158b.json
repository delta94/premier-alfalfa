{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\nexport var getCompanyInfo =\n/* GraphQL */\n\"\\n  query GetCompanyInfo($id: ID!) {\\n    getCompanyInfo(id: $id) {\\n      id\\n      companyName\\n      additionalName\\n      address1\\n      address2\\n      city\\n      state\\n      zipCode\\n      federalId\\n      telephoneNum\\n      faxNum\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listCompanyInfos =\n/* GraphQL */\n\"\\n  query ListCompanyInfos(\\n    $filter: ModelCompanyInfoFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listCompanyInfos(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        companyName\\n        additionalName\\n        address1\\n        address2\\n        city\\n        state\\n        zipCode\\n        federalId\\n        telephoneNum\\n        faxNum\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getCommodity =\n/* GraphQL */\n\"\\n  query GetCommodity($id: ID!) {\\n    getCommodity(id: $id) {\\n      id\\n      name\\n      calculateCode\\n      billingCode\\n      poundsPerBushel\\n      contracts {\\n        items {\\n          id\\n          contractNumber\\n          contractType\\n          contractState\\n          vendorId\\n          commodityId\\n          quantity\\n          price\\n          terms\\n          weights\\n          basis\\n          remarks\\n          beginDate\\n          endDate\\n          dateSigned\\n          purchasedFrom\\n          soldTo\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listCommoditys =\n/* GraphQL */\n\"\\n  query ListCommoditys(\\n    $filter: ModelCommodityFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listCommoditys(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        name\\n        calculateCode\\n        billingCode\\n        poundsPerBushel\\n        contracts {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getVendor =\n/* GraphQL */\n\"\\n  query GetVendor($id: ID!) {\\n    getVendor(id: $id) {\\n      id\\n      vendorNumber\\n      companyReportName\\n      companyListingName\\n      address1\\n      address2\\n      city\\n      state\\n      zipCode\\n      telephoneNum\\n      attention\\n      prepayment\\n      prepaymentAmt\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listVendors =\n/* GraphQL */\n\"\\n  query ListVendors(\\n    $filter: ModelVendorFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listVendors(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        vendorNumber\\n        companyReportName\\n        companyListingName\\n        address1\\n        address2\\n        city\\n        state\\n        zipCode\\n        telephoneNum\\n        attention\\n        prepayment\\n        prepaymentAmt\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getContract =\n/* GraphQL */\n\"\\n  query GetContract($id: ID!) {\\n    getContract(id: $id) {\\n      id\\n      contractNumber\\n      contractType\\n      contractState\\n      vendorId\\n      commodityId\\n      contractTo {\\n        id\\n        vendorNumber\\n        companyReportName\\n        companyListingName\\n        address1\\n        address2\\n        city\\n        state\\n        zipCode\\n        telephoneNum\\n        attention\\n        prepayment\\n        prepaymentAmt\\n        createdAt\\n        updatedAt\\n      }\\n      quantity\\n      price\\n      terms\\n      weights\\n      basis\\n      remarks\\n      beginDate\\n      endDate\\n      dateSigned\\n      purchasedFrom\\n      soldTo\\n      commodity {\\n        id\\n        name\\n        calculateCode\\n        billingCode\\n        poundsPerBushel\\n        contracts {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listContracts =\n/* GraphQL */\n\"\\n  query ListContracts(\\n    $filter: ModelContractFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listContracts(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        contractNumber\\n        contractType\\n        contractState\\n        vendorId\\n        commodityId\\n        contractTo {\\n          id\\n          vendorNumber\\n          companyReportName\\n          companyListingName\\n          address1\\n          address2\\n          city\\n          state\\n          zipCode\\n          telephoneNum\\n          attention\\n          prepayment\\n          prepaymentAmt\\n          createdAt\\n          updatedAt\\n        }\\n        quantity\\n        price\\n        terms\\n        weights\\n        basis\\n        remarks\\n        beginDate\\n        endDate\\n        dateSigned\\n        purchasedFrom\\n        soldTo\\n        commodity {\\n          id\\n          name\\n          calculateCode\\n          billingCode\\n          poundsPerBushel\\n          createdAt\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getTicket =\n/* GraphQL */\n\"\\n  query GetTicket($id: ID!) {\\n    getTicket(id: $id) {\\n      id\\n      contractId\\n      contract {\\n        id\\n        contractNumber\\n        contractType\\n        contractState\\n        vendorId\\n        commodityId\\n        contractTo {\\n          id\\n          vendorNumber\\n          companyReportName\\n          companyListingName\\n          address1\\n          address2\\n          city\\n          state\\n          zipCode\\n          telephoneNum\\n          attention\\n          prepayment\\n          prepaymentAmt\\n          createdAt\\n          updatedAt\\n        }\\n        quantity\\n        price\\n        terms\\n        weights\\n        basis\\n        remarks\\n        beginDate\\n        endDate\\n        dateSigned\\n        purchasedFrom\\n        soldTo\\n        commodity {\\n          id\\n          name\\n          calculateCode\\n          billingCode\\n          poundsPerBushel\\n          createdAt\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      ticketDate\\n      fieldNum\\n      baleCount\\n      ticketNumber\\n      ladingNumber\\n      driver\\n      truckNumber\\n      grossWeight\\n      tareWeight\\n      netWeight\\n      netTons\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listTickets =\n/* GraphQL */\n\"\\n  query ListTickets(\\n    $filter: ModelTicketFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listTickets(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        contractId\\n        contract {\\n          id\\n          contractNumber\\n          contractType\\n          contractState\\n          vendorId\\n          commodityId\\n          quantity\\n          price\\n          terms\\n          weights\\n          basis\\n          remarks\\n          beginDate\\n          endDate\\n          dateSigned\\n          purchasedFrom\\n          soldTo\\n          createdAt\\n          updatedAt\\n        }\\n        ticketDate\\n        fieldNum\\n        baleCount\\n        ticketNumber\\n        ladingNumber\\n        driver\\n        truckNumber\\n        grossWeight\\n        tareWeight\\n        netWeight\\n        netTons\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";","map":{"version":3,"sources":["/Users/gregleeper/premier-alfalfa/src/graphql/queries.ts"],"names":["getCompanyInfo","listCompanyInfos","getCommodity","listCommoditys","getVendor","listVendors","getContract","listContracts","getTicket","listTickets"],"mappings":"AAAA;;AACA;AACA;AAEA,OAAO,IAAMA,cAAc;AAAG;AAAH,mSAApB;AAmBP,OAAO,IAAMC,gBAAgB;AAAG;AAAH,ueAAtB;AA0BP,OAAO,IAAMC,YAAY;AAAG;AAAH,qpBAAlB;AAqCP,OAAO,IAAMC,cAAc;AAAG;AAAH,ibAApB;AAuBP,OAAO,IAAMC,SAAS;AAAG;AAAH,gVAAf;AAqBP,OAAO,IAAMC,WAAW;AAAG;AAAH,mhBAAjB;AA4BP,OAAO,IAAMC,WAAW;AAAG;AAAH,65BAAjB;AAsDP,OAAO,IAAMC,aAAa;AAAG;AAAH,ymCAAnB;AA0DP,OAAO,IAAMC,SAAS;AAAG;AAAH,wtCAAf;AAoEP,OAAO,IAAMC,WAAW;AAAG;AAAH,86BAAjB","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getCompanyInfo = /* GraphQL */ `\n  query GetCompanyInfo($id: ID!) {\n    getCompanyInfo(id: $id) {\n      id\n      companyName\n      additionalName\n      address1\n      address2\n      city\n      state\n      zipCode\n      federalId\n      telephoneNum\n      faxNum\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listCompanyInfos = /* GraphQL */ `\n  query ListCompanyInfos(\n    $filter: ModelCompanyInfoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listCompanyInfos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        companyName\n        additionalName\n        address1\n        address2\n        city\n        state\n        zipCode\n        federalId\n        telephoneNum\n        faxNum\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getCommodity = /* GraphQL */ `\n  query GetCommodity($id: ID!) {\n    getCommodity(id: $id) {\n      id\n      name\n      calculateCode\n      billingCode\n      poundsPerBushel\n      contracts {\n        items {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          price\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listCommoditys = /* GraphQL */ `\n  query ListCommoditys(\n    $filter: ModelCommodityFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listCommoditys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getVendor = /* GraphQL */ `\n  query GetVendor($id: ID!) {\n    getVendor(id: $id) {\n      id\n      vendorNumber\n      companyReportName\n      companyListingName\n      address1\n      address2\n      city\n      state\n      zipCode\n      telephoneNum\n      attention\n      prepayment\n      prepaymentAmt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listVendors = /* GraphQL */ `\n  query ListVendors(\n    $filter: ModelVendorFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listVendors(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getContract = /* GraphQL */ `\n  query GetContract($id: ID!) {\n    getContract(id: $id) {\n      id\n      contractNumber\n      contractType\n      contractState\n      vendorId\n      commodityId\n      contractTo {\n        id\n        vendorNumber\n        companyReportName\n        companyListingName\n        address1\n        address2\n        city\n        state\n        zipCode\n        telephoneNum\n        attention\n        prepayment\n        prepaymentAmt\n        createdAt\n        updatedAt\n      }\n      quantity\n      price\n      terms\n      weights\n      basis\n      remarks\n      beginDate\n      endDate\n      dateSigned\n      purchasedFrom\n      soldTo\n      commodity {\n        id\n        name\n        calculateCode\n        billingCode\n        poundsPerBushel\n        contracts {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listContracts = /* GraphQL */ `\n  query ListContracts(\n    $filter: ModelContractFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listContracts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        price\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getTicket = /* GraphQL */ `\n  query GetTicket($id: ID!) {\n    getTicket(id: $id) {\n      id\n      contractId\n      contract {\n        id\n        contractNumber\n        contractType\n        contractState\n        vendorId\n        commodityId\n        contractTo {\n          id\n          vendorNumber\n          companyReportName\n          companyListingName\n          address1\n          address2\n          city\n          state\n          zipCode\n          telephoneNum\n          attention\n          prepayment\n          prepaymentAmt\n          createdAt\n          updatedAt\n        }\n        quantity\n        price\n        terms\n        weights\n        basis\n        remarks\n        beginDate\n        endDate\n        dateSigned\n        purchasedFrom\n        soldTo\n        commodity {\n          id\n          name\n          calculateCode\n          billingCode\n          poundsPerBushel\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      ticketDate\n      fieldNum\n      baleCount\n      ticketNumber\n      ladingNumber\n      driver\n      truckNumber\n      grossWeight\n      tareWeight\n      netWeight\n      netTons\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listTickets = /* GraphQL */ `\n  query ListTickets(\n    $filter: ModelTicketFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listTickets(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        contractId\n        contract {\n          id\n          contractNumber\n          contractType\n          contractState\n          vendorId\n          commodityId\n          quantity\n          price\n          terms\n          weights\n          basis\n          remarks\n          beginDate\n          endDate\n          dateSigned\n          purchasedFrom\n          soldTo\n          createdAt\n          updatedAt\n        }\n        ticketDate\n        fieldNum\n        baleCount\n        ticketNumber\n        ladingNumber\n        driver\n        truckNumber\n        grossWeight\n        tareWeight\n        netWeight\n        netTons\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}