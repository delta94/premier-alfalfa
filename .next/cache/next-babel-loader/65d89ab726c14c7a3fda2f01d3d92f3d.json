{"ast":null,"code":"var _jsxFileName = \"/Users/gregleeper/premier-alfalfa/premier_alfalfa/components/formikSelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Select from \"react-select\";\nexport function FormikSelect({\n  options,\n  field,\n  form\n}) {\n  console.log(field);\n  return __jsx(Select, {\n    instanceId: 1,\n    className: \" w-full\",\n    name: field.name,\n    onBlur: field.onBlur,\n    onChange: ({\n      value\n    }) => {\n      form.setFieldValue(field.name, value);\n      console.log(value);\n    },\n    options: options,\n    value: options ? value ? options.find(option => option.value === value.toString()) : \"\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/gregleeper/premier-alfalfa/premier_alfalfa/components/formikSelect.js"],"names":["Select","FormikSelect","options","field","form","console","log","name","onBlur","value","setFieldValue","find","option","toString"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AAEA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAtB,EAAgD;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SACE,MAAC,MAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,SAAS,EAAC,SAFZ;AAGE,IAAA,IAAI,EAAEA,KAAK,CAACI,IAHd;AAIE,IAAA,MAAM,EAAEJ,KAAK,CAACK,MAJhB;AAKE,IAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAe;AACvBL,MAAAA,IAAI,CAACM,aAAL,CAAmBP,KAAK,CAACI,IAAzB,EAA+BE,KAA/B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KARH;AASE,IAAA,OAAO,EAAEP,OATX;AAUE,IAAA,KAAK,EACHA,OAAO,GACHO,KAAK,GACHP,OAAO,CAACS,IAAR,CAAcC,MAAD,IAAYA,MAAM,CAACH,KAAP,KAAiBA,KAAK,CAACI,QAAN,EAA1C,CADG,GAEH,EAHC,GAIH,EAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAoBD","sourcesContent":["import Select from \"react-select\";\n\nexport function FormikSelect({ options, field, form }) {\n  console.log(field);\n  return (\n    <Select\n      instanceId={1}\n      className=\" w-full\"\n      name={field.name}\n      onBlur={field.onBlur}\n      onChange={({ value }) => {\n        form.setFieldValue(field.name, value);\n        console.log(value);\n      }}\n      options={options}\n      value={\n        options\n          ? value\n            ? options.find((option) => option.value === value.toString())\n            : \"\"\n          : \"\"\n      }\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}