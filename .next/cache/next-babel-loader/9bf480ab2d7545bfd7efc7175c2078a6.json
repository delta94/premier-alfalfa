{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gregleeper/premier-alfalfa/premier_alfalfa/pages/vendors/bulk-create.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { CSVReader, readString } from \"react-papaparse\";\nimport Layout from \"../../components/layout\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { batchAddVendors } from \"../../../src/graphql/mutations.ts\";\nimport { API } from \"aws-amplify\";\n\nvar BulkCreateVendors = function BulkCreateVendors() {\n  _s();\n\n  var buttonRef = useRef();\n\n  var _useState = useState([]),\n      dataArray = _useState[0],\n      setDataArray = _useState[1];\n\n  var batchVendors = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              res = groupByN(25, dataArray);\n              res.map( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(el, index) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          console.log(el[index]); // await API.graphql({\n                          //   query: batchAddVendors,\n                          //   variables: {\n                          //     vendors: [el[index]],\n                          //   },\n                          // });\n\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x, _x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function batchVendors() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var groupByN = function groupByN(n, data) {\n    var result = [];\n\n    for (var i = 0; i < data.length; i += n) {\n      result.push(data.slice(i, i + n));\n    }\n\n    return result;\n  };\n\n  var handleOpenDialog = function handleOpenDialog(e) {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  var handleOnFileLoad = function handleOnFileLoad(data) {\n    var length = data.length;\n    var myArray = [];\n    data.map(function (vendor) {\n      return myArray.push(vendor.data);\n    });\n    myArray.map(function (i) {\n      return findNonStringKeys(i);\n    });\n    setDataArray(myArray);\n  };\n\n  var convertToBoolean = function convertToBoolean(value) {\n    return value == \"TRUE\";\n  };\n\n  var convertToNumber = function convertToNumber(value) {\n    return parseInt(value);\n  };\n\n  var findNonStringKeys = function findNonStringKeys(obj) {\n    var nonStringKeys = [\"prepayment\", \"prepaymentAmt\"];\n    Object.keys(obj).forEach(function (key) {\n      if (obj[key] === \"\") {\n        delete obj[key];\n      }\n\n      if (key === nonStringKeys[0]) {\n        var bool = convertToBoolean(obj[key]);\n        obj[key] = bool;\n      }\n\n      if (key === nonStringKeys[1]) {\n        var num = convertToNumber(obj[key]);\n        obj[key] = num;\n      }\n    });\n    console.log(obj);\n  };\n\n  console.log(dataArray);\n\n  var handleOnError = function handleOnError(err, file, inputElem, reason) {\n    console.log(err);\n  };\n\n  var handleOnRemoveFile = function handleOnRemoveFile(data) {\n    console.log(data);\n  };\n\n  var handleRemoveFile = function handleRemoveFile(e) {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  var replaceEmptyStringWithNull = function replaceEmptyStringWithNull(x) {\n    Object.values(x) === \"\" ? null : x;\n    console.log(x);\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center w-1/2 mx-auto py-6 text-2xl font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Bulk Upload Vendors\")), __jsx(\"div\", {\n    className: \"py-12 px-24 mx-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(CSVReader, {\n    ref: buttonRef,\n    onFileLoad: function onFileLoad(data) {\n      return handleOnFileLoad(data);\n    },\n    onError: function onError(err) {\n      return handleOnError(err);\n    },\n    noClick: true,\n    noDrag: true,\n    config: {\n      header: true\n    },\n    onRemoveFile: function onRemoveFile(data) {\n      return handleOnRemoveFile(data);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, function (_ref3) {\n    var file = _ref3.file;\n    return __jsx(\"div\", {\n      className: \"w-1/2 flex justify-items-center items-center h-12 mx-auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, __jsx(\"button\", {\n      className: \"w-3/12 border border-gray-900 h-full\",\n      type: \"button\",\n      onClick: function onClick(e) {\n        return handleOpenDialog(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Browe file\"), __jsx(\"div\", {\n      className: \"w-8/12 h-full border border-gray-300 text-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, file && file.name)), __jsx(\"button\", {\n      className: \"w-3/12 h-full border border-red-800\",\n      onClick: function onClick(data) {\n        return handleRemoveFile(data);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"Remove\"));\n  })), __jsx(\"div\", {\n    className: \"w-1/2 mx-auto text-2xl text-gray-900 text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, dataArray.length > 0 ? \"Number of items in file: \".concat(dataArray.length) : \"Please upload csv file\"), __jsx(\"button\", {\n    className: \"px-3 py-2 border border-gray-800 shadow hover:bg-gray-800 hover:text-white\",\n    onClick: function onClick() {\n      return batchVendors();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Process\"))));\n};\n\n_s(BulkCreateVendors, \"yd2447XbuR4+DVFL5313PC0yFeA=\");\n\n_c = BulkCreateVendors;\nexport default BulkCreateVendors;\n\nvar _c;\n\n$RefreshReg$(_c, \"BulkCreateVendors\");","map":{"version":3,"sources":["/Users/gregleeper/premier-alfalfa/premier_alfalfa/pages/vendors/bulk-create.js"],"names":["CSVReader","readString","Layout","useRef","useState","useEffect","batchAddVendors","API","BulkCreateVendors","buttonRef","dataArray","setDataArray","batchVendors","res","groupByN","map","el","index","console","log","n","data","result","i","length","push","slice","handleOpenDialog","e","current","open","handleOnFileLoad","myArray","vendor","findNonStringKeys","convertToBoolean","value","convertToNumber","parseInt","obj","nonStringKeys","Object","keys","forEach","key","bool","num","handleOnError","err","file","inputElem","reason","handleOnRemoveFile","handleRemoveFile","removeFile","replaceEmptyStringWithNull","x","values","header","name"],"mappings":"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","sourcesContent":["import { CSVReader, readString } from \"react-papaparse\";\nimport Layout from \"../../components/layout\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { batchAddVendors } from \"../../../src/graphql/mutations.ts\";\nimport { API } from \"aws-amplify\";\nconst BulkCreateVendors = () => {\n  const buttonRef = useRef();\n  const [dataArray, setDataArray] = useState([]);\n\n  const batchVendors = async () => {\n    const res = groupByN(25, dataArray);\n    res.map(async (el, index) => {\n      console.log(el[index]);\n      // await API.graphql({\n      //   query: batchAddVendors,\n      //   variables: {\n      //     vendors: [el[index]],\n      //   },\n      // });\n    });\n  };\n\n  let groupByN = (n, data) => {\n    let result = [];\n    for (let i = 0; i < data.length; i += n) result.push(data.slice(i, i + n));\n    return result;\n  };\n\n  const handleOpenDialog = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnFileLoad = (data) => {\n    const length = data.length;\n    let myArray = [];\n    data.map((vendor) => myArray.push(vendor.data));\n    myArray.map((i) => findNonStringKeys(i));\n    setDataArray(myArray);\n  };\n\n  const convertToBoolean = (value) => {\n    return value == \"TRUE\";\n  };\n\n  const convertToNumber = (value) => {\n    return parseInt(value);\n  };\n\n  const findNonStringKeys = (obj) => {\n    const nonStringKeys = [\"prepayment\", \"prepaymentAmt\"];\n    Object.keys(obj).forEach((key) => {\n      if (obj[key] === \"\") {\n        delete obj[key];\n      }\n      if (key === nonStringKeys[0]) {\n        const bool = convertToBoolean(obj[key]);\n        obj[key] = bool;\n      }\n      if (key === nonStringKeys[1]) {\n        const num = convertToNumber(obj[key]);\n        obj[key] = num;\n      }\n    });\n    console.log(obj);\n  };\n\n  console.log(dataArray);\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = (data) => {\n    console.log(data);\n  };\n\n  const handleRemoveFile = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  const replaceEmptyStringWithNull = (x) => {\n    Object.values(x) === \"\" ? null : x;\n    console.log(x);\n  };\n  return (\n    <Layout>\n      <div>\n        <div className=\"text-center w-1/2 mx-auto py-6 text-2xl font-bold\">\n          <h3>Bulk Upload Vendors</h3>\n        </div>\n        <div className=\"py-12 px-24 mx-auto\">\n          <CSVReader\n            ref={buttonRef}\n            onFileLoad={(data) => handleOnFileLoad(data)}\n            onError={(err) => handleOnError(err)}\n            noClick\n            noDrag\n            config={{ header: true }}\n            onRemoveFile={(data) => handleOnRemoveFile(data)}\n          >\n            {({ file }) => (\n              <div className=\"w-1/2 flex justify-items-center items-center h-12 mx-auto\">\n                <button\n                  className=\"w-3/12 border border-gray-900 h-full\"\n                  type=\"button\"\n                  onClick={(e) => handleOpenDialog(e)}\n                >\n                  Browe file\n                </button>\n                <div className=\"w-8/12 h-full border border-gray-300 text-center\">\n                  <span>{file && file.name}</span>\n                </div>\n                <button\n                  className=\"w-3/12 h-full border border-red-800\"\n                  onClick={(data) => handleRemoveFile(data)}\n                >\n                  Remove\n                </button>\n              </div>\n            )}\n          </CSVReader>\n        </div>\n        <div className=\"w-1/2 mx-auto text-2xl text-gray-900 text-center\">\n          <p>\n            {dataArray.length > 0\n              ? `Number of items in file: ${dataArray.length}`\n              : \"Please upload csv file\"}\n          </p>\n          <button\n            className=\"px-3 py-2 border border-gray-800 shadow hover:bg-gray-800 hover:text-white\"\n            onClick={() => batchVendors()}\n          >\n            Process\n          </button>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BulkCreateVendors;\n"]},"metadata":{},"sourceType":"module"}