{"ast":null,"code":"var _jsxFileName = \"/Users/gregleeper/premier-alfalfa/premier_alfalfa/components/formikSelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Select from \"react-select\";\nexport function FormikSelect(_ref) {\n  var options = _ref.options,\n      field = _ref.field,\n      form = _ref.form;\n  return __jsx(Select, {\n    name: field.name,\n    onBlur: field.onBlur,\n    onChange: function onChange(_ref2) {\n      var value = _ref2.value;\n      return form.setFieldValue(field.name, value);\n    },\n    options: typeOptions,\n    value: function () {\n      if (!options) return \"\";\n\n      for (var optionsLength = options.length, i = 0; i < optionsLength; i++) {\n        var option = options[i];\n\n        if (option.options) {\n          var valueCandidate = option.options.find(function (_ref3) {\n            var value = _ref3.value;\n            return value === field.value;\n          });\n          if (valueCandidate) return valueCandidate;\n        }\n\n        if (option.value === field.value) return option.value;\n      }\n\n      return \"\";\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  });\n}\n_c = FormikSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormikSelect\");","map":{"version":3,"sources":["/Users/gregleeper/premier-alfalfa/premier_alfalfa/components/formikSelect.js"],"names":["Select","FormikSelect","options","field","form","name","onBlur","value","setFieldValue","typeOptions","optionsLength","length","i","option","valueCandidate","find"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AAEA,OAAO,SAASC,YAAT,OAAgD;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,KAAe,QAAfA,KAAe;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACrD,SACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAEE,IAAA,MAAM,EAAEF,KAAK,CAACG,MAFhB;AAGE,IAAA,QAAQ,EAAE;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,aAAeH,IAAI,CAACI,aAAL,CAAmBL,KAAK,CAACE,IAAzB,EAA+BE,KAA/B,CAAf;AAAA,KAHZ;AAIE,IAAA,OAAO,EAAEE,WAJX;AAKE,IAAA,KAAK,EAAG,YAAM;AACZ,UAAI,CAACP,OAAL,EAAc,OAAO,EAAP;;AACd,WACE,IAAIQ,aAAa,GAAGR,OAAO,CAACS,MAA5B,EAAoCC,CAAC,GAAG,CAD1C,EAEEA,CAAC,GAAGF,aAFN,EAGEE,CAAC,EAHH,EAIE;AACA,YAAMC,MAAM,GAAGX,OAAO,CAACU,CAAD,CAAtB;;AACA,YAAIC,MAAM,CAACX,OAAX,EAAoB;AAClB,cAAMY,cAAc,GAAGD,MAAM,CAACX,OAAP,CAAea,IAAf,CACrB;AAAA,gBAAGR,KAAH,SAAGA,KAAH;AAAA,mBAAeA,KAAK,KAAKJ,KAAK,CAACI,KAA/B;AAAA,WADqB,CAAvB;AAGA,cAAIO,cAAJ,EAAoB,OAAOA,cAAP;AACrB;;AACD,YAAID,MAAM,CAACN,KAAP,KAAiBJ,KAAK,CAACI,KAA3B,EAAkC,OAAOM,MAAM,CAACN,KAAd;AACnC;;AACD,aAAO,EAAP;AACD,KAjBM,EALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA0BD;KA3BeN,Y","sourcesContent":["import Select from \"react-select\";\n\nexport function FormikSelect({ options, field, form }) {\n  return (\n    <Select\n      name={field.name}\n      onBlur={field.onBlur}\n      onChange={({ value }) => form.setFieldValue(field.name, value)}\n      options={typeOptions}\n      value={(() => {\n        if (!options) return \"\";\n        for (\n          let optionsLength = options.length, i = 0;\n          i < optionsLength;\n          i++\n        ) {\n          const option = options[i];\n          if (option.options) {\n            const valueCandidate = option.options.find(\n              ({ value }) => value === field.value\n            );\n            if (valueCandidate) return valueCandidate;\n          }\n          if (option.value === field.value) return option.value;\n        }\n        return \"\";\n      })()}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}