{"ast":null,"code":"var _jsxFileName = \"/Users/gregleeper/premier-alfalfa/premier_alfalfa/components/formikSelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Select from \"react-select\";\nexport function FormikSelect({\n  options,\n  field,\n  form\n}) {\n  console.log(options);\n  return __jsx(Select, {\n    instanceId: 1,\n    className: \" w-full\",\n    name: field.name,\n    onBlur: field.onBlur,\n    onChange: ({\n      value\n    }) => form.setFieldValue(field.name, value),\n    options: options,\n    value: (() => {\n      if (!options) return \"\";\n\n      for (let optionsLength = options.length, i = 0; i < optionsLength; i++) {\n        const option = options[i];\n\n        if (option.options) {\n          const valueCandidate = option.options.find(({\n            value\n          }) => value === field.value);\n          if (valueCandidate) return valueCandidate;\n        }\n\n        if (option.value === field.value) return option.value;\n      }\n\n      return \"\";\n    })(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/gregleeper/premier-alfalfa/premier_alfalfa/components/formikSelect.js"],"names":["Select","FormikSelect","options","field","form","console","log","name","onBlur","value","setFieldValue","optionsLength","length","i","option","valueCandidate","find"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AAEA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAtB,EAAgD;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,SACE,MAAC,MAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,SAAS,EAAC,SAFZ;AAGE,IAAA,IAAI,EAAEC,KAAK,CAACI,IAHd;AAIE,IAAA,MAAM,EAAEJ,KAAK,CAACK,MAJhB;AAKE,IAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAeL,IAAI,CAACM,aAAL,CAAmBP,KAAK,CAACI,IAAzB,EAA+BE,KAA/B,CAL3B;AAME,IAAA,OAAO,EAAEP,OANX;AAOE,IAAA,KAAK,EAAE,CAAC,MAAM;AACZ,UAAI,CAACA,OAAL,EAAc,OAAO,EAAP;;AACd,WACE,IAAIS,aAAa,GAAGT,OAAO,CAACU,MAA5B,EAAoCC,CAAC,GAAG,CAD1C,EAEEA,CAAC,GAAGF,aAFN,EAGEE,CAAC,EAHH,EAIE;AACA,cAAMC,MAAM,GAAGZ,OAAO,CAACW,CAAD,CAAtB;;AACA,YAAIC,MAAM,CAACZ,OAAX,EAAoB;AAClB,gBAAMa,cAAc,GAAGD,MAAM,CAACZ,OAAP,CAAec,IAAf,CACrB,CAAC;AAAEP,YAAAA;AAAF,WAAD,KAAeA,KAAK,KAAKN,KAAK,CAACM,KADV,CAAvB;AAGA,cAAIM,cAAJ,EAAoB,OAAOA,cAAP;AACrB;;AACD,YAAID,MAAM,CAACL,KAAP,KAAiBN,KAAK,CAACM,KAA3B,EAAkC,OAAOK,MAAM,CAACL,KAAd;AACnC;;AACD,aAAO,EAAP;AACD,KAjBM,GAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4BD","sourcesContent":["import Select from \"react-select\";\n\nexport function FormikSelect({ options, field, form }) {\n  console.log(options);\n  return (\n    <Select\n      instanceId={1}\n      className=\" w-full\"\n      name={field.name}\n      onBlur={field.onBlur}\n      onChange={({ value }) => form.setFieldValue(field.name, value)}\n      options={options}\n      value={(() => {\n        if (!options) return \"\";\n        for (\n          let optionsLength = options.length, i = 0;\n          i < optionsLength;\n          i++\n        ) {\n          const option = options[i];\n          if (option.options) {\n            const valueCandidate = option.options.find(\n              ({ value }) => value === field.value\n            );\n            if (valueCandidate) return valueCandidate;\n          }\n          if (option.value === field.value) return option.value;\n        }\n        return \"\";\n      })()}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}