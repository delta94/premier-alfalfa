{"ast":null,"code":"var _jsxFileName = \"/Users/gregleeper/premier-alfalfa/premier_alfalfa/pages/vendors/bulk-create.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { CSVReader, readString } from \"react-papaparse\";\nimport Layout from \"../../components/layout\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { batchAddVendors } from \"../../../src/graphql/mutations.ts\";\nimport { API } from \"aws-amplify\";\n\nconst BulkCreateVendors = () => {\n  const buttonRef = useRef();\n  const {\n    0: dataArray,\n    1: setDataArray\n  } = useState([]);\n\n  const batchVendors = async () => {\n    const groupsOf25 = dataArray.length / 25;\n    let currentGroup = 0;\n\n    do {\n      let count = 1;\n      let myArray = [];\n\n      while (count % 25 > 0) {\n        dataArray.map((el, index) => {\n          console.log(\"element: \", el, \"index: \", index, \"currentGroup: \", currentGroup, \"count: \", count);\n\n          if (index == count - 1) {\n            myArray.push(el);\n          }\n\n          count++;\n          console.log(count % 25);\n        });\n        currentGroup++;\n      }\n    } while (currentGroup <= groupsOf25);\n  };\n\n  const handleOpenDialog = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnFileLoad = data => {\n    const length = data.length;\n    let myArray = [];\n    data.map(vendor => myArray.push(vendor.data));\n    myArray.map(i => findNonStringKeys(i));\n    setDataArray(myArray);\n  };\n\n  const convertToBoolean = value => {\n    return value == \"TRUE\";\n  };\n\n  const convertToNumber = value => {\n    return parseInt(value);\n  };\n\n  const findNonStringKeys = obj => {\n    const nonStringKeys = [\"prepayment\", \"prepaymentAmt\"];\n    Object.keys(obj).forEach(key => {\n      if (obj[key] === \"\") {\n        obj[key] = null;\n      }\n\n      if (key === nonStringKeys[0]) {\n        const bool = convertToBoolean(obj[key]);\n        obj[key] = bool;\n      }\n\n      if (key === nonStringKeys[1]) {\n        const num = convertToNumber(obj[key]);\n        obj[key] = num;\n      }\n    });\n    console.log(obj);\n  };\n\n  console.log(dataArray);\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = data => {\n    console.log(data);\n  };\n\n  const handleRemoveFile = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  const replaceEmptyStringWithNull = x => {\n    Object.values(x) === \"\" ? null : x;\n    console.log(x);\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center w-1/2 mx-auto py-6 text-2xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Bulk Upload Vendors\")), __jsx(\"div\", {\n    className: \"py-12 px-24 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, __jsx(CSVReader, {\n    ref: buttonRef,\n    onFileLoad: data => handleOnFileLoad(data),\n    onError: err => handleOnError(err),\n    noClick: true,\n    noDrag: true,\n    config: {\n      header: true\n    },\n    onRemoveFile: data => handleOnRemoveFile(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, ({\n    file\n  }) => __jsx(\"div\", {\n    className: \"w-1/2 flex justify-items-center items-center h-12 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    className: \"w-3/12 border border-gray-900 h-full\",\n    type: \"button\",\n    onClick: e => handleOpenDialog(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Browe file\"), __jsx(\"div\", {\n    className: \"w-8/12 h-full border border-gray-300 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, file && file.name)), __jsx(\"button\", {\n    className: \"w-3/12 h-full border border-red-800\",\n    onClick: data => handleRemoveFile(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Remove\")))), __jsx(\"div\", {\n    className: \"w-1/2 mx-auto text-2xl text-gray-900 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, dataArray.length > 0 ? `Number of items in file: ${dataArray.length}` : \"Please upload csv file\"), __jsx(\"button\", {\n    className: \"px-3 py-2 border border-gray-800 shadow hover:bg-gray-800 hover:text-white\",\n    onClick: () => batchVendors(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Process\"))));\n};\n\nexport default BulkCreateVendors;","map":{"version":3,"sources":["/Users/gregleeper/premier-alfalfa/premier_alfalfa/pages/vendors/bulk-create.js"],"names":["CSVReader","readString","Layout","useRef","useState","useEffect","batchAddVendors","API","BulkCreateVendors","buttonRef","dataArray","setDataArray","batchVendors","groupsOf25","length","currentGroup","count","myArray","map","el","index","console","log","push","handleOpenDialog","e","current","open","handleOnFileLoad","data","vendor","i","findNonStringKeys","convertToBoolean","value","convertToNumber","parseInt","obj","nonStringKeys","Object","keys","forEach","key","bool","num","handleOnError","err","file","inputElem","reason","handleOnRemoveFile","handleRemoveFile","removeFile","replaceEmptyStringWithNull","x","values","header","name"],"mappings":"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","sourcesContent":["import { CSVReader, readString } from \"react-papaparse\";\nimport Layout from \"../../components/layout\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { batchAddVendors } from \"../../../src/graphql/mutations.ts\";\nimport { API } from \"aws-amplify\";\nconst BulkCreateVendors = () => {\n  const buttonRef = useRef();\n  const [dataArray, setDataArray] = useState([]);\n\n  const batchVendors = async () => {\n    const groupsOf25 = dataArray.length / 25;\n    let currentGroup = 0;\n\n    do {\n      let count = 1;\n      let myArray = [];\n      while (count % 25 > 0) {\n        dataArray.map((el, index) => {\n          console.log(\n            \"element: \",\n            el,\n            \"index: \",\n            index,\n            \"currentGroup: \",\n            currentGroup,\n            \"count: \",\n            count\n          );\n          if (index == count - 1) {\n            myArray.push(el);\n          }\n          count++;\n          console.log(count % 25);\n        });\n        currentGroup++;\n      }\n    } while (currentGroup <= groupsOf25);\n  };\n\n  const handleOpenDialog = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnFileLoad = (data) => {\n    const length = data.length;\n    let myArray = [];\n    data.map((vendor) => myArray.push(vendor.data));\n    myArray.map((i) => findNonStringKeys(i));\n    setDataArray(myArray);\n  };\n\n  const convertToBoolean = (value) => {\n    return value == \"TRUE\";\n  };\n\n  const convertToNumber = (value) => {\n    return parseInt(value);\n  };\n\n  const findNonStringKeys = (obj) => {\n    const nonStringKeys = [\"prepayment\", \"prepaymentAmt\"];\n    Object.keys(obj).forEach((key) => {\n      if (obj[key] === \"\") {\n        obj[key] = null;\n      }\n      if (key === nonStringKeys[0]) {\n        const bool = convertToBoolean(obj[key]);\n        obj[key] = bool;\n      }\n      if (key === nonStringKeys[1]) {\n        const num = convertToNumber(obj[key]);\n        obj[key] = num;\n      }\n    });\n    console.log(obj);\n  };\n\n  console.log(dataArray);\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = (data) => {\n    console.log(data);\n  };\n\n  const handleRemoveFile = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  const replaceEmptyStringWithNull = (x) => {\n    Object.values(x) === \"\" ? null : x;\n    console.log(x);\n  };\n  return (\n    <Layout>\n      <div>\n        <div className=\"text-center w-1/2 mx-auto py-6 text-2xl font-bold\">\n          <h3>Bulk Upload Vendors</h3>\n        </div>\n        <div className=\"py-12 px-24 mx-auto\">\n          <CSVReader\n            ref={buttonRef}\n            onFileLoad={(data) => handleOnFileLoad(data)}\n            onError={(err) => handleOnError(err)}\n            noClick\n            noDrag\n            config={{ header: true }}\n            onRemoveFile={(data) => handleOnRemoveFile(data)}\n          >\n            {({ file }) => (\n              <div className=\"w-1/2 flex justify-items-center items-center h-12 mx-auto\">\n                <button\n                  className=\"w-3/12 border border-gray-900 h-full\"\n                  type=\"button\"\n                  onClick={(e) => handleOpenDialog(e)}\n                >\n                  Browe file\n                </button>\n                <div className=\"w-8/12 h-full border border-gray-300 text-center\">\n                  <span>{file && file.name}</span>\n                </div>\n                <button\n                  className=\"w-3/12 h-full border border-red-800\"\n                  onClick={(data) => handleRemoveFile(data)}\n                >\n                  Remove\n                </button>\n              </div>\n            )}\n          </CSVReader>\n        </div>\n        <div className=\"w-1/2 mx-auto text-2xl text-gray-900 text-center\">\n          <p>\n            {dataArray.length > 0\n              ? `Number of items in file: ${dataArray.length}`\n              : \"Please upload csv file\"}\n          </p>\n          <button\n            className=\"px-3 py-2 border border-gray-800 shadow hover:bg-gray-800 hover:text-white\"\n            onClick={() => batchVendors()}\n          >\n            Process\n          </button>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BulkCreateVendors;\n"]},"metadata":{},"sourceType":"module"}