{"ast":null,"code":"var _jsxFileName = \"/Users/gregleeper/premier-alfalfa/premier_alfalfa/pages/tickets/bulk-create.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { CSVReader } from \"react-papaparse\";\nimport Layout from \"../../components/layout\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { batchAddTickets } from \"../../../src/graphql/mutations.ts\";\nimport moment from \"moment\";\nimport { API } from \"aws-amplify\";\n\nconst BulkCreateTickets = () => {\n  const buttonRef = useRef();\n  const {\n    0: dataArray,\n    1: setDataArray\n  } = useState([]);\n\n  const batchTickets = async () => {\n    const res = groupByN(25, dataArray);\n    res.map(el => el.map(async set => {\n      await API.graphql({\n        query: batchAddTickets,\n        variables: {\n          tickets: [set]\n        }\n      });\n    }));\n  };\n\n  let groupByN = (n, data) => {\n    let result = [];\n\n    for (let i = 0; i < data.length; i += n) result.push(data.slice(i, i + n));\n\n    return result;\n  };\n\n  const handleOpenDialog = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnFileLoad = data => {\n    const length = data.length;\n    let myArray = [];\n    data.map(contract => myArray.push(contract.data));\n    myArray.map(i => {\n      findNonStringKeys(i);\n      convertToDateTime(i);\n    });\n    setDataArray(myArray);\n  };\n\n  const convertToBoolean = value => {\n    return value == \"TRUE\";\n  };\n\n  const convertToNumber = value => {\n    return parseFloat(value);\n  };\n\n  const convertToDateTime = obj => {\n    const dateTimeKeys = [\"ticketDate\"];\n    Object.keys(obj).forEach(key => {\n      if (key === dateTimeKeys[0]) {\n        const date = moment(obj[key]);\n        obj[key] = date.toDate();\n      }\n    });\n  };\n\n  const findNonStringKeys = obj => {\n    const nonStringKeys = [\"baleCount\", \"grossWeight\", \"tareWeight\", \"netWeight\", \"netTons\"];\n    Object.keys(obj).forEach(key => {\n      if (obj[key] === \"\") {\n        delete obj[key];\n      } // if (key === nonStringKeys[0]) {\n      //   const bool = convertToBoolean(obj[key]);\n      //   obj[key] = bool;\n      // }\n\n\n      if (key === nonStringKeys[1] || key === nonStringKeys[0]) {\n        const num = convertToNumber(obj[key]);\n        obj[key] = num;\n      }\n    });\n  };\n\n  console.log(\"data array: \", dataArray);\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = data => {\n    console.log(data);\n  };\n\n  const handleRemoveFile = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  const replaceEmptyStringWithNull = x => {\n    Object.values(x) === \"\" ? null : x;\n    console.log(x);\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center w-1/2 mx-auto py-6 text-2xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Bulk Upload Tickets\")), __jsx(\"div\", {\n    className: \"py-12 px-24 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(CSVReader, {\n    ref: buttonRef,\n    onFileLoad: data => handleOnFileLoad(data),\n    onError: err => handleOnError(err),\n    noClick: true,\n    noDrag: true,\n    config: {\n      header: true\n    },\n    onRemoveFile: data => handleOnRemoveFile(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, ({\n    file\n  }) => __jsx(\"div\", {\n    className: \"w-1/2 flex justify-items-center items-center h-12 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    className: \"w-3/12 border border-gray-900 h-full\",\n    type: \"button\",\n    onClick: e => handleOpenDialog(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Browe file\"), __jsx(\"div\", {\n    className: \"w-8/12 h-full border border-gray-300 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, file && file.name)), __jsx(\"button\", {\n    className: \"w-3/12 h-full border border-red-800\",\n    onClick: data => handleRemoveFile(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Remove\")))), __jsx(\"div\", {\n    className: \"w-1/2 mx-auto text-2xl text-gray-900 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, dataArray.length > 0 ? `Number of items in file: ${dataArray.length}` : \"Please upload csv file\"), __jsx(\"button\", {\n    className: \"px-3 py-2 border border-gray-800 shadow hover:bg-gray-800 hover:text-white\",\n    onClick: () => batchTickets(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Process\"))));\n};\n\nexport default BulkCreateTickets;","map":{"version":3,"sources":["/Users/gregleeper/premier-alfalfa/premier_alfalfa/pages/tickets/bulk-create.js"],"names":["CSVReader","Layout","useRef","useState","useEffect","batchAddTickets","moment","API","BulkCreateTickets","buttonRef","dataArray","setDataArray","batchTickets","res","groupByN","map","el","set","graphql","query","variables","tickets","n","data","result","i","length","push","slice","handleOpenDialog","e","current","open","handleOnFileLoad","myArray","contract","findNonStringKeys","convertToDateTime","convertToBoolean","value","convertToNumber","parseFloat","obj","dateTimeKeys","Object","keys","forEach","key","date","toDate","nonStringKeys","num","console","log","handleOnError","err","file","inputElem","reason","handleOnRemoveFile","handleRemoveFile","removeFile","replaceEmptyStringWithNull","x","values","header","name"],"mappings":"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","sourcesContent":["import { CSVReader } from \"react-papaparse\";\nimport Layout from \"../../components/layout\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { batchAddTickets } from \"../../../src/graphql/mutations.ts\";\nimport moment from \"moment\";\nimport { API } from \"aws-amplify\";\nconst BulkCreateTickets = () => {\n  const buttonRef = useRef();\n  const [dataArray, setDataArray] = useState([]);\n\n  const batchTickets = async () => {\n    const res = groupByN(25, dataArray);\n\n    res.map((el) =>\n      el.map(async (set) => {\n        await API.graphql({\n          query: batchAddTickets,\n          variables: {\n            tickets: [set],\n          },\n        });\n      })\n    );\n  };\n\n  let groupByN = (n, data) => {\n    let result = [];\n    for (let i = 0; i < data.length; i += n) result.push(data.slice(i, i + n));\n    return result;\n  };\n\n  const handleOpenDialog = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnFileLoad = (data) => {\n    const length = data.length;\n    let myArray = [];\n    data.map((contract) => myArray.push(contract.data));\n    myArray.map((i) => {\n      findNonStringKeys(i);\n      convertToDateTime(i);\n    });\n    setDataArray(myArray);\n  };\n\n  const convertToBoolean = (value) => {\n    return value == \"TRUE\";\n  };\n\n  const convertToNumber = (value) => {\n    return parseFloat(value);\n  };\n\n  const convertToDateTime = (obj) => {\n    const dateTimeKeys = [\"ticketDate\"];\n    Object.keys(obj).forEach((key) => {\n      if (key === dateTimeKeys[0]) {\n        const date = moment(obj[key]);\n        obj[key] = date.toDate();\n      }\n    });\n  };\n\n  const findNonStringKeys = (obj) => {\n    const nonStringKeys = [\n      \"baleCount\",\n      \"grossWeight\",\n      \"tareWeight\",\n      \"netWeight\",\n      \"netTons\",\n    ];\n    Object.keys(obj).forEach((key) => {\n      if (obj[key] === \"\") {\n        delete obj[key];\n      }\n      // if (key === nonStringKeys[0]) {\n      //   const bool = convertToBoolean(obj[key]);\n      //   obj[key] = bool;\n      // }\n      if (key === nonStringKeys[1] || key === nonStringKeys[0]) {\n        const num = convertToNumber(obj[key]);\n        obj[key] = num;\n      }\n    });\n  };\n\n  console.log(\"data array: \", dataArray);\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = (data) => {\n    console.log(data);\n  };\n\n  const handleRemoveFile = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  const replaceEmptyStringWithNull = (x) => {\n    Object.values(x) === \"\" ? null : x;\n    console.log(x);\n  };\n  return (\n    <Layout>\n      <div>\n        <div className=\"text-center w-1/2 mx-auto py-6 text-2xl font-bold\">\n          <h3>Bulk Upload Tickets</h3>\n        </div>\n        <div className=\"py-12 px-24 mx-auto\">\n          <CSVReader\n            ref={buttonRef}\n            onFileLoad={(data) => handleOnFileLoad(data)}\n            onError={(err) => handleOnError(err)}\n            noClick\n            noDrag\n            config={{ header: true }}\n            onRemoveFile={(data) => handleOnRemoveFile(data)}\n          >\n            {({ file }) => (\n              <div className=\"w-1/2 flex justify-items-center items-center h-12 mx-auto\">\n                <button\n                  className=\"w-3/12 border border-gray-900 h-full\"\n                  type=\"button\"\n                  onClick={(e) => handleOpenDialog(e)}\n                >\n                  Browe file\n                </button>\n                <div className=\"w-8/12 h-full border border-gray-300 text-center\">\n                  <span>{file && file.name}</span>\n                </div>\n                <button\n                  className=\"w-3/12 h-full border border-red-800\"\n                  onClick={(data) => handleRemoveFile(data)}\n                >\n                  Remove\n                </button>\n              </div>\n            )}\n          </CSVReader>\n        </div>\n        <div className=\"w-1/2 mx-auto text-2xl text-gray-900 text-center\">\n          <p>\n            {dataArray.length > 0\n              ? `Number of items in file: ${dataArray.length}`\n              : \"Please upload csv file\"}\n          </p>\n          <button\n            className=\"px-3 py-2 border border-gray-800 shadow hover:bg-gray-800 hover:text-white\"\n            onClick={() => batchTickets()}\n          >\n            Process\n          </button>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BulkCreateTickets;\n"]},"metadata":{},"sourceType":"module"}